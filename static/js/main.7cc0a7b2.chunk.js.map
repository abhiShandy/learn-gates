{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","Desc","props","className","value","Gate","icon","faArrowRight","SingleOutQubit","faChevronRight","size","TwoOutQubits","OutBit","BIT","state","this","setState","onClick","handleClick","React","Component","NOT","AND","bitsIn","Array","fill","bitOut","i","slice","XOR","bit1","bit2","QUBIT","qubitIn","qubitsIn2","X","SWAP","qubitsIn","qubitsOut","CNOT","CCNOT","qubit1","qubit2","qubit3","qubit4","qubit5","CSWAP","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7cc0a7b2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react';\nimport { faArrowRight, faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction Desc(props) {\n  return (\n    <p className=\"col-md-6 text-left\">\n      {props.value}\n    </p>\n  );\n}\n\nfunction Gate(props) {\n  return (\n    <span className=\"Gate col-md-2\">\n      <FontAwesomeIcon icon={faArrowRight}/>\n      <div className=\"btn btn-outline-info disabled\">{props.value}</div>\n      <FontAwesomeIcon icon={faArrowRight}/>\n    </span>\n  );\n}\n\nfunction SingleOutQubit(props) {\n  return (\n    <div className=\"col-md-2\">\n      <span className=\"bar\">|</span>\n      <div className=\"btn btn-outline-primary bit disabled\">\n        {props.value}\n      </div>\n      <FontAwesomeIcon icon={faChevronRight} size='lg'/>\n    </div>\n  );\n}\n\nfunction TwoOutQubits(props) {\n  return (\n    <div className=\"col-md-2\">\n      <span className=\"bar\">|</span>\n      <div className=\"btn btn-outline-primary bit disabled\">{props.value[0]}</div>\n      <div className=\"btn btn-outline-primary bit disabled\">{props.value[1]}</div>\n      <FontAwesomeIcon icon={faChevronRight} size='lg'/>\n    </div>\n  );\n}\n\nfunction OutBit(props) {\n  return (\n    <div className=\"col-md-2\">\n      <div className=\"btn btn-outline-primary bit disabled\">{props.value}</div>\n    </div>\n  );\n}\n\nclass BIT extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0,\n    };\n  }\n\n  handleClick() {\n    const value = !this.state.value;\n    this.setState({\n      value: value,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"row\">\n        <Desc value=\"A qubit is the basic unit of classical information. It can either be 0 or 1. You can toggle it by clicking on it.\"/>\n        <div className=\"col-md-2\">\n          <button className=\"btn btn-outline-primary bit\" onClick={() => this.handleClick()}>\n            {this.state.value?'1':'0'}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass NOT extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0,\n    };\n  }\n\n  handleClick() {\n    const value = !this.state.value;\n    this.setState({\n      value: value,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"row\">\n        <Desc value=\"NOT gate flips the bit\"/>\n        <div className=\"col-md-2\">\n          <button className=\"btn btn-outline-primary bit\" onClick={() => this.handleClick()}>\n            {this.state.value?'1':'0'}\n          </button>\n        </div>\n        <Gate value=\"NOT\"/>\n        <OutBit value={this.state.value?'0':'1'}/>\n      </div>\n    );\n  }\n}\n\nclass AND extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bitsIn: Array(2).fill(1),\n      bitOut: 1\n    };\n  }\n\n  handleClick(i) {\n    const bitsIn = this.state.bitsIn.slice();\n    bitsIn[i] = bitsIn[i]==1?0:1;\n    this.setState({\n      bitsIn: bitsIn,\n      bitOut: (bitsIn[0] && bitsIn[1]),\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"row\">\n        <Desc value=\"AND gate produces true when both input bits are true\"/>\n        <div className=\"col-md-2\">\n          <button className=\"btn btn-outline-primary bit\" onClick={() => this.handleClick(0)}>{this.state.bitsIn[0]}</button>\n          <button className=\"btn btn-outline-primary bit\" onClick={() => this.handleClick(1)}>{this.state.bitsIn[1]}</button>\n        </div>\n        <Gate value=\"AND\"/>\n        <OutBit value={this.state.bitOut}/>\n      </div>\n    );\n  }\n}\n\nclass XOR extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bit1: 0,\n      bit2: 1,\n      value: 1\n    };\n  }\n\n  handleClick(i) {\n    let bit1 = this.state.bit1;\n    let bit2 = this.state.bit2;\n    if (i==1) {\n      bit1 = bit1==1?0:1;\n    } else {\n      bit2 = bit2==1?0:1;\n    }\n    const value = bit1 != bit2?'1':'0';\n    this.setState({\n      bit1: bit1,\n      bit2: bit2,\n      value: value,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"row\">\n        <Desc value=\"XOR gate produces true when both input bits are different\"/>\n        <div className=\"col-md-2\">\n          <button className=\"btn btn-outline-primary bit\" onClick={() => this.handleClick(1)}>{this.state.bit1}</button>\n          <button className=\"btn btn-outline-primary bit\" onClick={() => this.handleClick(2)}>{this.state.bit2}</button>\n        </div>\n        <Gate value=\"XOR\"/>\n        <OutBit value={this.state.value}/>\n      </div>\n    );\n  }\n}\n\nclass QUBIT extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      qubitIn: 0,\n      qubitsIn2: Array(2).fill(1),\n    };\n  }\n\n  handleClick(i) {\n    let qubitIn;\n    if (i==2) {\n      qubitIn = !this.state.qubitIn;\n    }\n    const qubitsIn2 = this.state.qubitsIn2.slice();\n    if (i==1 || i==0) {\n      qubitsIn2[i] = qubitsIn2[i]==1?0:1;\n    }\n    this.setState({\n      qubitIn: qubitIn,\n      qubitsIn2: qubitsIn2,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"row\">\n        <Desc\n          value=\"A qubit is the basic unit of quantum information. It can either be |0>, |1> or weighted sum of both.\n          Examples of single qubit: |0>, |1>. Examples of two qubit: |00>, |11>, |01>. You can toggle them by clicking on the digits.\"/>\n        <div className=\"col-md-2\">\n          <span className=\"bar\">|</span>\n          <button className=\"btn btn-outline-primary bit\" onClick={() => this.handleClick(2)}>\n            {this.state.qubitIn?'1':'0'}\n          </button>\n          <FontAwesomeIcon icon={faChevronRight} size=\"lg\"/>\n        </div>\n        <div className=\"col-md-2\">\n          <span className=\"bar\">|</span>\n          <button className=\"btn btn-outline-primary bit\" onClick={() => this.handleClick(0)}>{this.state.qubitsIn2[0]}</button>\n          <button className=\"btn btn-outline-primary bit\" onClick={() => this.handleClick(1)}>{this.state.qubitsIn2[1]}</button>\n        <FontAwesomeIcon icon={faChevronRight} size='lg'/>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass X extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      qubitIn: 0\n    };\n  }\n\n  handleClick() {\n    const qubitIn = !this.state.qubitIn;\n    this.setState({\n      qubitIn: qubitIn,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"row\">\n        <Desc value=\"X quantum gate flips the qubit\"/>\n        <div className=\"col-md-2\">\n          <span className=\"bar\">|</span>\n          <button className=\"btn btn-outline-primary bit\" onClick={() => this.handleClick()}>\n            {this.state.qubitIn?'1':'0'}\n          </button>\n          <FontAwesomeIcon icon={faChevronRight} size=\"lg\"/>\n        </div>\n          <Gate value=\"X\"/>\n          <SingleOutQubit value={this.state.qubitIn?'0':'1'}/>\n      </div>\n    );\n  }\n}\n\nclass SWAP extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      qubitsIn:  Array(2).fill(0),\n      qubitsOut: Array(2).fill(0),\n    };\n  }\n\n  handleClick(i) {\n    const qubitsIn  = this.state.qubitsIn.slice();\n    qubitsIn[i] = qubitsIn[i]==1?0:1;\n\n    const qubitsOut = this.state.qubitsOut.slice();\n    qubitsOut[0] = qubitsIn[1];\n    qubitsOut[1] = qubitsIn[0];\n    this.setState({\n      qubitsIn:  qubitsIn,\n      qubitsOut: qubitsOut,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"row\">\n        <Desc value=\"SWAP quantum gate swaps two qubits\"/>\n        <div className=\"col-md-2\">\n          <span className=\"bar\">|</span>\n          <button className=\"btn btn-outline-primary bit\" onClick={() => this.handleClick(0)}>{this.state.qubitsIn[0]}</button>\n          <button className=\"btn btn-outline-primary bit\" onClick={() => this.handleClick(1)}>{this.state.qubitsIn[1]}</button>\n          <FontAwesomeIcon icon={faChevronRight} size='lg'/>\n        </div>\n        <Gate value=\"SWAP\"/>\n        <TwoOutQubits value={this.state.qubitsOut}/>\n      </div>\n    );\n  }\n}\n\nclass CNOT extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      qubitsIn:  Array(2).fill(0),\n      qubitsOut: Array(2).fill(0),\n    };\n  }\n\n  handleClick(i) {\n    const qubitsIn  = this.state.qubitsIn.slice();\n    qubitsIn[i] = qubitsIn[i]==1?0:1;\n\n    const qubitsOut = this.state.qubitsOut.slice();\n    qubitsOut[0] = qubitsIn[0];\n    if (qubitsIn[0]==1) {\n      qubitsOut[1] = qubitsIn[1]==1?0:1;\n    } else {\n      qubitsOut[1] = qubitsIn[1];      \n    }\n    this.setState({\n      qubitsIn:  qubitsIn,\n      qubitsOut: qubitsOut,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"row\">\n        <Desc value=\"CNOT quantum gate flips the second qubit if first qubit is |1>\"/>\n        <div className=\"col-md-2\">\n          <span className=\"bar\">|</span>\n          <button className=\"btn btn-outline-primary bit\" onClick={() => this.handleClick(0)}>{this.state.qubitsIn[0]}</button>\n          <button className=\"btn btn-outline-primary bit\" onClick={() => this.handleClick(1)}>{this.state.qubitsIn[1]}</button>\n          <FontAwesomeIcon icon={faChevronRight} size='lg'/>\n        </div>\n        <Gate value=\"CNOT\"/>\n        <TwoOutQubits value={this.state.qubitsOut}/>\n      </div>\n    );\n  }\n}\n\nclass CCNOT extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      qubit1: 0,\n      qubit2: 0,\n      qubit3: 0,\n      qubit4: 0,\n      qubit5: 0,\n    };\n  }\n\n  handleClick(i) {\n    let qubit1 = this.state.qubit1;\n    let qubit2 = this.state.qubit2;\n    if (i==1) {\n      qubit1 = !qubit1;\n    } else {\n      qubit2 = !qubit2;\n    }\n    this.setState({\n      qubit1: qubit1,\n      qubit2: qubit2,\n      qubit3: qubit2,\n      qubit4: (qubit1? !qubit2 : qubit2),\n      qubit5: (qubit1? !qubit2 : qubit2),\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"row\">\n        <Desc value=\"CCNOT quantum gate ....\"/>\n        <div className=\"col-md-2\">\n          <span className=\"bar\">|</span>\n          <button className=\"btn btn-outline-primary bit\" onClick={() => this.handleClick(1)}>{this.state.qubit1?'1':'0'}</button>\n          <button className=\"btn btn-outline-primary bit\" onClick={() => this.handleClick(2)}>{this.state.qubit2?'1':'0'}</button>\n          <button className=\"btn btn-outline-primary bit\" onClick={() => this.handleClick(3)}>{this.state.qubit3?'1':'0'}</button>\n          <FontAwesomeIcon icon={faChevronRight} size='lg'/>\n        </div>\n          <Gate value=\"CNOT\"/>\n        <div className=\"col-md-2\">\n          <span className=\"bar\">|</span>\n          <div className=\"btn btn-outline-primary bit disabled\">{this.state.qubit1?'1':'0'}</div>\n          <div className=\"btn btn-outline-primary bit\">{this.state.qubit4?'1':'0'}</div>\n          <div className=\"btn btn-outline-primary bit\">{this.state.qubit5?'1':'0'}</div>\n          <FontAwesomeIcon icon={faChevronRight} size='lg'/>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass CSWAP extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      qubit1: 0,\n      qubit2: 0,\n      qubit3: 0,\n      qubit4: 0,\n      qubit5: 0,\n    };\n  }\n\n  handleClick(i) {\n    let qubit1 = this.state.qubit1;\n    let qubit2 = this.state.qubit2;\n    if (i==1) {\n      qubit1 = !qubit1;\n    } else {\n      qubit2 = !qubit2;\n    }\n    this.setState({\n      qubit1: qubit1,\n      qubit2: qubit2,\n      qubit3: qubit2,\n      qubit4: (qubit1? !qubit2 : qubit2),\n      qubit5: (qubit1? !qubit2 : qubit2),\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"row\">\n        <Desc value=\"CSWAP quantum gate ....\"/>\n        <div className=\"col-md-2\">\n          <span className=\"bar\">|</span>\n          <button className=\"btn btn-outline-primary bit\" onClick={() => this.handleClick(1)}>{this.state.qubit1?'1':'0'}</button>\n          <button className=\"btn btn-outline-primary bit\" onClick={() => this.handleClick(2)}>{this.state.qubit2?'1':'0'}</button>\n          <button className=\"btn btn-outline-primary bit\" onClick={() => this.handleClick(3)}>{this.state.qubit3?'1':'0'}</button>\n          <FontAwesomeIcon icon={faChevronRight} size='lg'/>\n        </div>\n          <Gate value=\"CNOT\"/>\n        <div className=\"col-md-2\">\n          <span className=\"bar\">|</span>\n          <div className=\"btn btn-outline-primary bit disabled\">{this.state.qubit1?'1':'0'}</div>\n          <div className=\"btn btn-outline-primary bit\">{this.state.qubit4?'1':'0'}</div>\n          <div className=\"btn btn-outline-primary bit\">{this.state.qubit5?'1':'0'}</div>\n          <FontAwesomeIcon icon={faChevronRight} size='lg'/>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <h2 className=\"text-left\">Classical bit</h2>\n        <BIT />\n        <h2 className=\"text-left\">Single bit gates</h2>\n        <NOT />\n        <h2 className=\"text-left\">Two bit gates</h2>\n        <AND />\n        <XOR />\n        <h2 className=\"text-left\">What's a qubit?</h2>\n        <QUBIT />\n        <h2 className=\"text-left\">Single qubit gates</h2>\n        <X />\n        <h2 className=\"text-left\">Two qubit gates</h2>\n        <SWAP />\n        <CNOT />\n        <h2 className=\"text-left\">Three qubit gates</h2>\n        <CCNOT />\n        <CSWAP />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}